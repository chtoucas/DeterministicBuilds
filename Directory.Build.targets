<Project>

  <!-- Workaround for https://github.com/dotnet/sourcelink/issues/572 -->
  <!-- Fixed in .NET Core 3.1.300+ -->
  <!--
  <PropertyGroup>
    <TargetFrameworkMonikerAssemblyAttributesPath>$([System.IO.Path]::Combine('$(IntermediateOutputPath)','$(TargetFrameworkMoniker).AssemblyAttributes$(DefaultLanguageSourceExtension)'))</TargetFrameworkMonikerAssemblyAttributesPath>
  </PropertyGroup>
  <ItemGroup>
    <EmbeddedFiles Include="$(GeneratedAssemblyInfoFile)"/>
  </ItemGroup>
  -->

  <!-- Workaround for https://github.com/dotnet/sdk/issues/11105 -->
  <!-- Fixed by https://github.com/NuGet/NuGet.Client/pull/3430 -->
  <ItemGroup>
    <SourceRoot Include="$(NuGetPackageRoot)" Condition=" '$(NuGetPackageRoot)' != '' " />
  </ItemGroup>

  <!-- https://github.com/coverlet-coverage/coverlet/blob/master/Documentation/DeterministicBuild.md -->
  <!--
    When UseSourceLink = true and ContinuousIntegrationBuild = true.
      Without this target, we get an empty CC.
      With this target, Coverlet throws KeyNotFoundException.

    Remark:
      Deterministic = true (default) and ContinuousIntegrationBuild = true imply
      DeterministicSourcePaths = true.
      https://github.com/dotnet/roslyn/blob/master/src/Compilers/Core/MSBuildTask/Microsoft.Managed.Core.targets#L131
   -->
  <Target Name="CoverletGetPathMap"
          DependsOnTargets="InitializeSourceRootMappedPaths"
          Returns="@(_LocalTopLevelSourceRoot)"
          Condition=" '$(DeterministicSourcePaths)' == 'true' ">
    <ItemGroup>
      <_LocalTopLevelSourceRoot Include="@(SourceRoot)" Condition="'%(SourceRoot.NestedRoot)' == ''"/>
    </ItemGroup>
  </Target>

</Project>
